import 'package:flutter/material.dart';

class CustomThemeColors extends ThemeExtension<CustomThemeColors> {
  final Color? primary,
      primaryLight,
      primarySecondaryLight,
      whiteIcon,
      white,
      whiteText,
      secondaryWhite,
      secondary,
      tertiaryText,
      primaryBackground,
      secondaryBackground,
      tertiaryBackground,
      quaternaryBackground,
      placeholder,
      green,
      darkGreen,
      lightGreen,
      primaryLightGreen,
      purple,
      lightPurple,
      grayShade300,
      theme,
      error,
      red,
      lightRed,
      darkRed,
      brown,
      blue,
      darkBlue,
      lightYellow,
      yellow,
      caption,
      inputFilled,
      lightBlue,
      greenIconbackground,
      black,
      boxShadow,
      primaryDarkBlue,
      primaryDarkGreen,
      primaryLightBlue,
      carbonGrey,
      orangyRed,
      blueVariant,
      blueVariantLight,
      secondaryText,
      themeCaption;

  const CustomThemeColors({
    required this.primary,
    required this.secondaryText,
    required this.themeCaption,
    required this.primarySecondaryLight,
    required this.primaryLight,
    required this.whiteIcon,
    required this.tertiaryText,
    required this.secondary,
    required this.primaryDarkBlue,
    required this.white,
    required this.secondaryWhite,
    required this.primaryBackground,
    required this.secondaryBackground,
    required this.tertiaryBackground,
    required this.placeholder,
    required this.primaryLightBlue,
    required this.green,
    required this.darkGreen,
    required this.whiteText,
    required this.lightGreen,
    required this.primaryLightGreen,
    required this.lightBlue,
    required this.grayShade300,
    required this.theme,
    required this.purple,
    required this.lightPurple,
    required this.error,
    required this.red,
    required this.lightRed,
    required this.darkRed,
    required this.brown,
    required this.blue,
    required this.darkBlue,
    required this.lightYellow,
    required this.caption,
    required this.yellow,
    required this.inputFilled,
    required this.black,
    required this.primaryDarkGreen,
    required this.greenIconbackground,
    required this.boxShadow,
    required this.carbonGrey,
    required this.orangyRed,
    required this.quaternaryBackground,
    required this.blueVariant,
    required this.blueVariantLight,
  });

  @override
  CustomThemeColors copyWith({
    Color? primary,
    Color? primaryLight,
    Color? themeCaption,
    Color? secondaryText,
    Color? primarySecondaryLight,
    Color? whiteIcon,
    Color? secondary,
    Color? tertiaryText,
    Color? primaryBackground,
    Color? secondaryBackground,
    Color? tertiaryBackground,
    Color? placeholder,
    Color? green,
    Color? darkGreen,
    Color? lightGreen,
    Color? white,
    Color? caption,
    Color? whiteText,
    Color? secondaryWhite,
    Color? lightPurple,
    Color? primaryLightGreen,
    Color? purple,
    Color? lightYellow,
    Color? yellow,
    Color? grayShade300,
    Color? theme,
    Color? error,
    Color? red,
    Color? boxShadow,
    Color? lightRed,
    Color? darkRed,
    Color? brown,
    Color? blue,
    Color? primaryDarkBlue,
    Color? blueVariant,
    Color? blueVariantLight,
    Color? darkBlue,
    Color? inputFilled,
    Color? black,
    Color? primaryLightBlue,
    Color? primaryDarkGreen,
    Color? carbonGrey,
    Color? orangyRed,
    Color? quaternaryBackground,
  }) {
    return CustomThemeColors(
      primary: primary ?? this.primary,
      primarySecondaryLight:
          primarySecondaryLight ?? this.primarySecondaryLight,
      caption: caption ?? this.caption,
      themeCaption: themeCaption ?? this.themeCaption,
      secondaryText: secondaryText ?? this.secondaryText,
      primaryLight: primaryLight ?? this.primaryLight,
      whiteText: whiteText ?? this.whiteText,
      tertiaryText: tertiaryText ?? this.tertiaryText,
      whiteIcon: whiteIcon ?? this.whiteIcon,
      white: white ?? this.white,
      secondaryWhite: secondaryWhite ?? this.secondaryWhite,
      secondary: secondary ?? this.secondary,
      primaryBackground: primaryBackground ?? this.primaryBackground,
      blueVariant: blueVariant ?? this.blueVariant,
      boxShadow: boxShadow ?? this.boxShadow,
      blueVariantLight: blueVariantLight ?? this.blueVariantLight,
      secondaryBackground: secondaryBackground ?? this.secondaryBackground,
      tertiaryBackground: tertiaryBackground ?? this.tertiaryBackground,
      placeholder: placeholder ?? this.placeholder,
      green: green ?? this.green,
      darkGreen: darkGreen ?? this.darkGreen,
      lightGreen: lightGreen ?? this.lightGreen,
      grayShade300: grayShade300 ?? this.grayShade300,
      theme: theme ?? this.theme,
      purple: purple ?? this.purple,
      lightPurple: lightPurple ?? this.lightPurple,
      error: error ?? this.error,
      red: red ?? this.red,
      lightRed: lightRed ?? this.lightRed,
      darkRed: darkRed ?? this.darkRed,
      brown: brown ?? this.brown,
      blue: blue ?? this.blue,
      darkBlue: darkBlue ?? this.darkBlue,
      lightBlue: lightBlue ?? lightBlue,
      yellow: yellow ?? this.yellow,
      lightYellow: lightYellow ?? this.lightYellow,
      inputFilled: inputFilled ?? this.inputFilled,
      black: black ?? this.black,
      primaryDarkBlue: primaryDarkBlue ?? this.primaryDarkBlue,
      primaryLightBlue: primaryLightBlue ?? this.primaryLightBlue,
      primaryLightGreen: primaryLightGreen ?? this.primaryLightGreen,
      primaryDarkGreen: primaryDarkGreen ?? this.primaryDarkGreen,
      carbonGrey: carbonGrey ?? this.carbonGrey,
      orangyRed: orangyRed ?? this.orangyRed,
      quaternaryBackground: quaternaryBackground ?? this.quaternaryBackground,
      greenIconbackground: greenIconbackground ?? greenIconbackground,
    );
  }

  @override
  CustomThemeColors lerp(ThemeExtension<CustomThemeColors>? other, double t) {
    if (other == null || other is! CustomThemeColors) {
      return this;
    }
    return CustomThemeColors(
      primary: Color.lerp(primary, other.primary, t),
      primarySecondaryLight:
          Color.lerp(primarySecondaryLight, other.primarySecondaryLight, t),
      caption: Color.lerp(caption, other.caption, t),
      themeCaption: Color.lerp(themeCaption, other.themeCaption, t),
      secondaryText: Color.lerp(secondaryText, other.secondaryText, t),
      primaryLight: Color.lerp(primaryLight, other.primaryLight, t),
      whiteIcon: Color.lerp(whiteIcon, other.whiteIcon, t),
      tertiaryText: Color.lerp(tertiaryText, other.tertiaryText, t),
      secondary: Color.lerp(secondary, other.secondary, t),
      white: Color.lerp(white, other.white, t),
      boxShadow: Color.lerp(boxShadow, other.boxShadow, t),
      whiteText: Color.lerp(whiteText, other.whiteText, t),
      secondaryWhite: Color.lerp(secondaryWhite, other.secondaryWhite, t),
      blueVariant: Color.lerp(blueVariant, other.blueVariant, t),
      blueVariantLight: Color.lerp(blueVariantLight, other.blueVariantLight, t),
      primaryBackground:
          Color.lerp(primaryBackground, other.primaryBackground, t),
      greenIconbackground:
          Color.lerp(greenIconbackground, other.greenIconbackground, t),
      secondaryBackground:
          Color.lerp(secondaryBackground, other.secondaryBackground, t),
      tertiaryBackground:
          Color.lerp(tertiaryBackground, other.tertiaryBackground, t),
      placeholder: Color.lerp(placeholder, other.placeholder, t),
      green: Color.lerp(green, other.green, t),
      darkGreen: Color.lerp(darkGreen, other.darkGreen, t),
      lightGreen: Color.lerp(lightGreen, other.lightGreen, t),
      grayShade300: Color.lerp(grayShade300, other.grayShade300, t),
      theme: Color.lerp(theme, other.theme, t),
      purple: Color.lerp(purple, other.purple, t),
      lightPurple: Color.lerp(lightPurple, other.lightPurple, t),
      lightBlue: Color.lerp(lightBlue, other.lightBlue, t),
      error: Color.lerp(error, other.error, t),
      red: Color.lerp(red, other.red, t),
      lightRed: Color.lerp(lightRed, other.lightRed, t),
      darkRed: Color.lerp(darkRed, other.darkRed, t),
      brown: Color.lerp(brown, other.brown, t),
      blue: Color.lerp(blue, other.blue, t),
      darkBlue: Color.lerp(darkBlue, other.darkBlue, t),
      yellow: Color.lerp(yellow, other.yellow, t),
      lightYellow: Color.lerp(lightYellow, other.lightYellow, t),
      inputFilled: Color.lerp(inputFilled, other.inputFilled, t),
      black: Color.lerp(black, other.black, t),
      primaryDarkBlue: Color.lerp(primaryDarkBlue, other.primaryDarkBlue, t),
      primaryLightBlue: Color.lerp(primaryLightBlue, other.primaryLightBlue, t),
      primaryLightGreen:
          Color.lerp(primaryLightGreen, other.primaryLightGreen, t),
      primaryDarkGreen: Color.lerp(primaryDarkGreen, other.primaryDarkGreen, t),
      carbonGrey: Color.lerp(carbonGrey, other.carbonGrey, t),
      orangyRed: Color.lerp(orangyRed, other.orangyRed, t),
      quaternaryBackground:
          Color.lerp(quaternaryBackground, other.quaternaryBackground, t),
    );
  }
}
